name: Dependabot Auto-Approve and Merge

on:
  schedule:
    - cron: '*/5 * * * *'  # Alle 5 Minuten

jobs:
  auto-approve-merge:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      issues: write
    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4
        
      - name: Aktuelle Uhrzeit anzeigen
        run: echo "Die aktuelle Uhrzeit ist $(date)"
      
      - name: Bei GitHub anmelden
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          
      - name: Dependabot PRs finden und verarbeiten
        run: |
          echo "Suche nach Dependabot PRs..."
          
          # Liste aller offenen PRs von Dependabot mit Titel und Nummer
          dependabot_prs=$(gh pr list --author "dependabot[bot]" --json number,title --jq '.')
          
          if [ -z "$dependabot_prs" ]; then
            echo "Keine offenen Dependabot PRs gefunden."
            exit 0
          fi
          
          echo "Dependabot PRs gefunden. Verarbeite..."
          
          # Für jeden PR prüfen, ob es sich um Minor oder Patch handelt
          echo "$dependabot_prs" | jq -c '.[]' | while read -r pr; do
            pr_number=$(echo "$pr" | jq -r '.number')
            pr_title=$(echo "$pr" | jq -r '.title')
            
            echo "Prüfe PR #$pr_number: $pr_title"
            
            # Prüfen, ob es sich um ein Major-Update handelt
            if [[ "$pr_title" =~ major ]] || [[ "$pr_title" =~ "bump ".+" from "([0-9]+)".+ to "([1-9][0-9]+) ]] && [[ "${BASH_REMATCH[2]}" > "${BASH_REMATCH[1]}" ]]; then
              echo "PR #$pr_number ist ein Major-Update. Wird übersprungen."
              continue
            fi
            
            # Prüfe Dependabot-Metadaten für genauere Versionsinformationen
            pr_body=$(gh pr view "$pr_number" --json body --jq '.body')
            
            if [[ "$pr_body" =~ "BREAKING CHANGE" ]] || [[ "$pr_body" =~ "Major version change" ]]; then
              echo "PR #$pr_number enthält Breaking Changes. Wird übersprungen."
              continue
            fi
            
            echo "PR #$pr_number ist ein Minor- oder Patch-Update. Wird verarbeitet."
            
            # Workflow für diesen spezifischen PR starten
            workflow_run_id=$(gh workflow run process-single-pr.yml -f pr_number=$pr_number --json id --jq '.id')
            
            if [ -n "$workflow_run_id" ]; then
              echo "Workflow für PR #$pr_number gestartet (ID: $workflow_run_id)"
            else
              echo "Konnte Workflow für PR #$pr_number nicht starten"
            fi
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}