name: Dependabot Auto-Approve and Merge

on:
  schedule:
    #- cron: '*/5 * * * *'  # Stündlich ausführen
    - cron: '0 21 * * 3'

jobs:
  auto-approve-merge:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4

      - name: Bei GitHub anmelden
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Dependabot PRs finden und verarbeiten
        run: |
          echo "Suche nach Dependabot PRs..."
          
          # Liste aller offenen PRs von Dependabot mit Titel und Nummer
          dependabot_prs=$(gh pr list --author "dependabot[bot]" --json number,title,body --jq '.')
          
          if [ -z "$dependabot_prs" ]; then
            echo "Keine offenen Dependabot PRs gefunden."
            exit 0
          fi
          
          echo "Dependabot PRs gefunden. Verarbeite..."
          
          # Für jeden PR prüfen, ob es sich um Minor oder Patch handelt
          echo "$dependabot_prs" | jq -c '.[]' | while read -r pr; do
            pr_number=$(echo "$pr" | jq -r '.number')
            pr_title=$(echo "$pr" | jq -r '.title')
            pr_body=$(echo "$pr" | jq -r '.body')
            
            echo "Prüfe PR #$pr_number: $pr_title"
            
            # Prüfen, ob es sich um ein Major-Update handelt
            if [[ "$pr_title" =~ major ]] || [[ "$pr_title" =~ "bump ".+" from "([0-9]+)".+ to "([1-9][0-9]+) ]] && [[ "${BASH_REMATCH[2]}" > "${BASH_REMATCH[1]}" ]]; then
              echo "PR #$pr_number ist ein Major-Update. Wird übersprungen."
              continue
            fi
            
            # Prüfe Dependabot-Metadaten für genauere Versionsinformationen
            if [[ "$pr_body" =~ "BREAKING CHANGE" ]] || [[ "$pr_body" =~ "Major version change" ]]; then
              echo "PR #$pr_number enthält Breaking Changes. Wird übersprungen."
              continue
            fi
            
            echo "PR #$pr_number ist ein Minor- oder Patch-Update. Wird verarbeitet."
            
            # PR genehmigen
            echo "Genehmige PR #$pr_number..."
            gh pr review $pr_number --approve -b "Automatisch genehmigt durch Workflow (Minor/Patch Update)."
            
            # Kurz warten, damit GitHub den Status aktualisieren kann
            sleep 5
            
            # PR-Status erneut abrufen (mit Debug-Output)
            pr_info=$(gh pr view $pr_number --json state,mergeable,mergeStateStatus,reviewDecision)
            echo "PR Info: $pr_info"
            
            # Werte extrahieren
            state=$(echo "$pr_info" | jq -r '.state')
            mergeable=$(echo "$pr_info" | jq -r '.mergeable')
            review_decision=$(echo "$pr_info" | jq -r '.reviewDecision // "NONE"')
            
            echo "Status: $state, Mergeable: $mergeable, Review: $review_decision"
            
            # PR mergen, wenn möglich
            if [ "$state" == "OPEN" ]; then
              if [ "$mergeable" == "true" ] || [ "$mergeable" == "MERGEABLE" ]; then
                echo "Merge PR #$pr_number..."
                gh pr merge $pr_number --auto --squash
              else
                echo "PR #$pr_number ist noch nicht mergebar. Versuche direkten Merge-Befehl..."
                gh pr merge $pr_number --auto --squash
              fi
            else
              echo "PR #$pr_number ist nicht offen. Überspringe."
            fi
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}